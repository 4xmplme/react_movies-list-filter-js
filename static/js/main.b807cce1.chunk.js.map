{"version":3,"sources":["components/SearchBox/SearchBox.jsx","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/Sidebar/Sidebar.jsx","App.jsx","index.jsx"],"names":["SearchBox","onQueryChange","className","htmlFor","type","id","placeholder","onChange","event","target","value","MovieCard","movie","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","Sidebar","App","useState","query","setQuery","elementContainsQuery","element","toLowerCase","includes","visibleMovies","moviesFromServer","filter","trim","ReactDOM","render","document","getElementById"],"mappings":"quEAAaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAH,OACvB,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UAEE,uBAAOC,QAAQ,eAAeD,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACEE,KAAK,OACLC,GAAG,eACHC,YAAY,mBACZC,SAAU,SAAAC,GAAK,OAAIP,EAAcO,EAAMC,OAAOC,QAC9CR,UAAU,kBCZPS,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,sBAAKV,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBAAKW,IAAKD,EAAME,OAAQC,IAAI,kBAIhC,sBAAKb,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBAAKW,IAAI,wBAAwBE,IAAI,aAIzC,qBAAKb,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BU,EAAMI,aAIrC,sBAAKd,UAAU,UAAf,UACGU,EAAMK,YACP,uBACA,mBAAGC,KAAMN,EAAMO,QAAf,6BCvBKC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,qBAAKnB,UAAU,SAAf,SACGmB,EAAOC,KAAI,SAAAV,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMW,cCJfC,G,MAAU,kBACrB,qBAAKtB,UAAU,UAAf,iC,OCIWuB,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAuB,SAAAC,GAAO,OAClCA,EAAQC,cAAcC,SAASL,EAAMI,gBAGjCE,EAAgBC,EAAiBC,QACrC,gBAAGnB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAV,OACEY,EAAqBb,IAAUa,EAAqBZ,MAIxD,OACE,sBAAKf,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAWD,cAAe,SAAAS,GAAK,OAAIkB,EAASlB,EAAM0B,WAClD,cAAC,EAAD,CAAYf,OAAQY,OAGtB,cAAC,EAAD,QCvBNI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b807cce1.chunk.js","sourcesContent":["export const SearchBox = ({ onQueryChange }) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      {/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}\n      <label htmlFor=\"search-query\" className=\"label\">\n        Search movie\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          placeholder=\"Type search word\"\n          onChange={event => onQueryChange(event.target.value)}\n          className=\"input\"\n        />\n      </div>\n    </div>\n  </div>\n);\n","import './MovieCard.scss';\n\nexport const MovieCard = ({ movie }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img src={movie.imgUrl} alt=\"Film logo\" />\n      </figure>\n    </div>\n\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\n          </figure>\n        </div>\n\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","import './Sidebar.scss';\n\nexport const Sidebar = () => (\n  <div className=\"sidebar\">\n    Sidebar goes here\n  </div>\n);\n","import { useState } from 'react';\nimport './App.scss';\nimport { SearchBox } from './components/SearchBox';\nimport { MoviesList } from './components/MoviesList';\nimport { Sidebar } from './components/Sidebar';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [query, setQuery] = useState('');\n\n  const elementContainsQuery = element => (\n    element.toLowerCase().includes(query.toLowerCase())\n  );\n\n  const visibleMovies = moviesFromServer.filter(\n    ({ title, description }) => (\n      elementContainsQuery(title) || elementContainsQuery(description)\n    ),\n  );\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <SearchBox onQueryChange={value => setQuery(value.trim())} />\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <Sidebar />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}